plugins {
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'pmd'
    // tests
    id 'groovy'
    id 'jacoco'
    id 'org.barfuin.gradle.jacocolog' version '1.1.1'
}

group = 'com.jvmops'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '14'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    spockVersion = '1.3-groovy-2.5'
    testcontainersVersion = '1.14.3'
    testcontainersEmbeddedMongoVersion = '1.71'
    springCloudVersion = 'Hoxton.SR4'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // tests

    testImplementation "org.spockframework:spock-core:$spockVersion"
    testImplementation "org.spockframework:spock-spring:$spockVersion"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation "org.testcontainers:testcontainers:$testcontainersVersion"
    testImplementation "com.playtika.testcontainers:embedded-mongodb:$testcontainersEmbeddedMongoVersion"
    testImplementation "org.springframework.cloud:spring-cloud-starter"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

pmd {
    consoleOutput = true
    toolVersion = "6.25.0"
    rulePriority = 5

    // https://github.com/pmd/pmd/tree/master/pmd-java/src/main/resources/category/java
    ruleSets = ["category/java/bestpractices.xml"]
}

/**
 * Test configuration
 */

jacocoTestReport {
    reports {
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
        csv.enabled false
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.3
            }
        }
    }
}

check.dependsOn jacocoTestCoverageVerification
check.dependsOn jacocoTestReport

tasks.withType(Test) {
    jvmArgs += "-Djdk.module.illegalAccess=deny"
}

test {
    useJUnitPlatform()

    // extensive docker and spring logging
    testLogging.showStandardStreams = false

    // https://docs.gradle.org/current/dsl/org.gradle.api.tasks.testing.logging.TestLoggingContainer.html
    testLogging {
        events "passed", "skipped", "failed"
    }

    afterSuite { desc, result ->
        if (!desc.parent)
            println("${result.resultType} " +
                    "(${result.testCount} tests, " +
                    "${result.successfulTestCount} successes, " +
                    "${result.failedTestCount} failures, " +
                    "${result.skippedTestCount} skipped)")
    }
}

// this has to be here till the maven artifactory will be added
// it enables actions/upload-artifact@v1 actions/download-artifact@v1 to work
libsDirName = 'app'
